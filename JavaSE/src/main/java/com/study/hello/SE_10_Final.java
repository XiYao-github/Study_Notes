package com.study.hello;

/**
 * final
 * - final关键字是最终的意思，可以修饰(类、方法、变量)，也可以修饰形参。
 * - 修饰类：表明该类是最终类(包装类)，不能被继承。
 * - 修饰方法：表明该方法是最终方法，不能被重写，不能修饰构造器。
 * - 修饰变量：表示该变量第一次赋值后，不能再次赋值(有且仅能被赋值一次)。
 * <p>
 * 注意细节
 * - 如果是final修饰的属性，必须赋初值，并且不能修改，初始化的位置可以在定义时，构造器中，代码块中。
 * - 如果使用构造器初始化final修饰的属性，就不能编写其他构造器，不然存在无法初始化变量的情况。
 * - 如果是static final修饰的属性，初始化的位置只能是定义时和静态代码块中，不能在构造器中赋值。
 * - 如果是final修饰的类，不能继承，但是可以实例化对象，基础类型包装类和String类都是final类。
 * - 如果类不是final类，但是含有final方法，则该方法虽然不能重写，但是可以被继承。
 * - 如果是final修饰的类，方法可以不加final修饰，因为类不能被继承，方法也就不能被重写。
 * - 修饰属性时static和final可以搭配使用，效率更高，使用属性时可以不加载类(底层编译器做了优化处理)。
 * - final修饰是基本类型，那么变量存储的数据值不能发生改变。
 * - final修饰是引用类型，那么变量存储的地址值不能发生改变，但是地址指向的对象内容是可以发生变化的。
 */
public class SE_10_Final {
    public static void main(String[] args) {

    }
}
